::Shops[script]

macros.initShops = {
	handler: function (place, macroName, params, parser) {
		
		if (state.active.variables.shops === undefined) {
			state.active.variables.shops = [];
			state.active.variables.shops.push({"ID": 0,"name": "hotel gift shop", "open":"00:00:00", "close":"23:59:59", "items": [
				{"type":"Item", "ID":0, "quantity":10, "maxQuantity":15, "refillDelay":1440, "lastRefill":new Date(-8640000000000000)},
				{"type":"Item", "ID":1, "quantity":5, "maxQuantity":15, "refillDelay":1440, "lastRefill":new Date(-8640000000000000)},
				{"type":"Cloth", "ID":1, "quantity":1, "maxQuantity":15, "refillDelay":1440, "lastRefill":new Date(-8640000000000000)}	
			]});
		}
	}
};

window.buy = function (_item, _type, _shopId, _itemIndex) {
	var item_obj = JSON.parse(unescape(_item));

	if ((state.active.variables.money >= item_obj.buyPrice) && (state.active.variables.shops[_shopId].items[_itemIndex].quantity > 0)) {
		
		/*
		* Buy an item
		*/
		if (_type.toUpperCase() === "ITEM") {
			// item not yet existent?
			var existing_items_with_id = state.active.variables.inventory.filter(obj => {
					return obj.ID === item_obj.ID
				});

			if (existing_items_with_id.length == 0) {
				// add new item
				state.active.variables.inventory.push(item_obj);
				state.active.variables.money -=item_obj.buyPrice;
				state.active.variables.shops[_shopId].items[_itemIndex].quantity -=1;

			} else if (existing_items_with_id.length > 0) {
				// change amount
				for (var i in state.active.variables.inventory) {
					if (state.active.variables.inventory[i].ID == item_obj.ID) {
						state.active.variables.inventory[i].owned +=1;
						state.active.variables.money -=item_obj.buyPrice;
						state.active.variables.shops[_shopId].items[_itemIndex].quantity -=1;
						break;
					}
				}
			} else {
				throwError(null, "<<" + macroName + ">>: There are several items with the same id " + item_obj.ID);
				return;
			}

		/*
		* Buy cloth
		*/
		} else if (_type.toUpperCase() === "CLOTH") {
			// cloth not yet existent?
			var existing_cloths_with_id = state.active.variables.wardrobe.filter(obj => {
					return obj.ID === item_obj.ID
				});

			if (existing_cloths_with_id.length == 0) {
				// add new cloth
				state.active.variables.wardrobe.push(item_obj);
				state.active.variables.money -=item_obj.buyPrice;
			} else if (existing_cloths_with_id.length > 0) {
				// change amount
				for (var i in state.active.variables.wardrobe) {
					if (state.active.variables.wardrobe[i].ID == item_obj.ID) {
						state.active.variables.wardrobe[i].owned +=1;
						state.active.variables.money -=item_obj.buyPrice;
						state.active.variables.shops[_shopId].items[_itemIndex].quantity -=1;
						break;
					}
				}
			} else {
				throwError(null, "<<" + macroName + ">>: There are several cloth with the same id " + item_obj.ID);
				return;
			}			
		} else {
			throwError(null, "buy: Unknown item type " + item_obj.type);
			return;
		}
		

	}

	// Refresh the page.
	state.display(state.active.title, null, "back");
};

window.sell = function (_item, _type, _shopId, _itemIndex) {
	var item_obj = JSON.parse(unescape(_item));
	
	/*
	* Sell item
	*/
	if (_type.toUpperCase() === "ITEM") {

		var existing_items_with_id = state.active.variables.inventory.filter(obj => {
				return obj.ID === item_obj.ID
		});
		if (existing_items_with_id.length == 0)
			return;


		// Delete a special amount from inventory
		for (var i in state.active.variables.inventory) {
			if (state.active.variables.inventory[i].ID == item_obj.ID) {
				state.active.variables.inventory[i].owned -= 1;
				state.active.variables.money +=item_obj.sellPrice;
				state.active.variables.shops[_shopId].items[_itemIndex].quantity +=1;

				// Delete item completely if owned <= 0
				if (state.active.variables.inventory[i].owned <= 0) {
					state.active.variables.inventory.splice(i, 1);
				}
				break;
			}
		}
		
	/*
	* Sell cloth
	*/
	} else if (_type.toUpperCase() === "CLOTH") {
		var existing_items_with_id = state.active.variables.wardrobe.filter(obj => {
			return obj.ID === item_obj.ID
		});
		if (existing_items_with_id.length == 0)
			return;

		// TODO Check if wearing

		// Delete a special amount from cloth
		for (var i in state.active.variables.wardrobe) {
			if (state.active.variables.wardrobe[i].ID == item_obj.ID) {
				state.active.variables.wardrobe[i].owned -= 1;
				state.active.variables.money +=item_obj.sellPrice;

				// Delete item completely if owned <= 0
				if (state.active.variables.wardrobe[i].owned <= 0) {
					state.active.variables.wardrobe.splice(i, 1);
				}
				break;
			}
		}
	
	}

	// Refresh page
	state.display(state.active.title, null, "back");
};

macros.shop = {
	handler: function (place, macroName, params, parser) {
	
		if (params.length != 1) {
			throwError(place, "<<" + macroName + ">>: expects shop id as parameter");
			return;
		}
		
		if (state.active.variables.shops[params[0]] === undefined) {
			throwError(place, "<<" + macroName + ">>: There is no shop with the id " + params[0]);
			return;			
		}
		
		// Is open?
		if ((state.active.variables.time !== undefined) && (state.active.variables.time <= state.active.variables.shops[params[0]].open) && (state.active.variables.time >= state.active.variables.shops[params[0]].close)) {
			new Wikifier(place, "Shop is closed.");
			return;
		}
			
		
		if (state.active.variables.shops[params[0]].items.length == 0) {
			new Wikifier(place, 'No items to sell.');
		} else {	
			var shop_str = "<table class=\"shop\"><tr>";
			shop_str += "<td class=\"shop\"><b>ID</b></td>";
			shop_str += "<td class=\"shop\"><b>name</b></td>";
			shop_str += "<td class=\"shop\"><b>quantity</b></td>";
			shop_str += "<td class=\"shop\"><b>buy</b></td>";
			shop_str += "<td class=\"shop\"><b>sell</b></td>";
			if (inventorySkill1Label.length > 0) shop_str +="<td class=\"shop\"><b>" + inventorySkill1Label + "</b></td>";
			if (inventorySkill2Label.length > 0) shop_str +="<td class=\"shop\"><b>" + inventorySkill2Label + "</b></td>";
			if (inventorySkill3Label.length > 0) shop_str +="<td class=\"shop\"><b>" + inventorySkill3Label + "</b></td>";	
			shop_str +="<td class=\"shop\"><b>image</b></td>";
			shop_str +="</tr>";

			for (var i=0; i<state.active.variables.shops[params[0]].items.length; i++) {
				
				// Update item quantity
				if (state.active.variables.shops[params[0]].items[i].quantity < state.active.variables.shops[params[0]].items[i].maxQuantity) {
					var minutes_diff = Math.floor(((Math.abs(state.active.variables.time - state.active.variables.shops[params[0]].items[i].lastRefill))/1000)/60);				
						if (minutes_diff > 0) {				
						var items_after_refill = state.active.variables.shops[params[0]].items[i].quantity + Math.floor(minutes_diff / state.active.variables.shops[params[0]].items[i].refillDelay);
						state.active.variables.shops[params[0]].items[i].quantity = max(state.active.variables.shops[params[0]].items[i].maxQuantity, items_after_refill);
						state.active.variables.shops[params[0]].items[i].lastRefill = state.active.variables.time;
					}
				}
			
				var existing_items_with_id = [];
				var object_owned = [];
				var is_cloth_worn = false;
				if (state.active.variables.shops[params[0]].items[i].type.toUpperCase() === "ITEM") {
					
					// Get the item in the list of all items
					existing_items_with_id = state.active.variables.items.filter(obj => {return obj.ID === state.active.variables.shops[params[0]].items[i].ID});
					
					// Get the items owned by the player
					if (existing_items_with_id.length > 0) {
						object_owned = state.active.variables.inventory.filter(obj => {return obj.ID === existing_items_with_id[0].ID});
					}
				} else if (state.active.variables.shops[params[0]].items[i].type.toUpperCase() === "CLOTH") {
					
					// Get the cloth in the list of all cloth
					existing_items_with_id = state.active.variables.all_cloth.filter(obj => {return obj.ID === state.active.variables.shops[params[0]].items[i].ID});
					
					// Get the cloth owned by the player
					if (existing_items_with_id.length > 0) {
						object_owned = state.active.variables.wardrobe.filter(obj => {return obj.ID === existing_items_with_id[0].ID});
						
						// Check if cloth is worn
						is_cloth_worn = is_worn(existing_items_with_id[0].ID);
					}
				}
				
				if (existing_items_with_id.length == 0) {
					throwError(place, "<<" + macroName + ">>: There is no item from type " + state.active.variables.shops[params[0]].items[i].type + " with ID " + state.active.variables.shops[params[0]].items[i].ID);
					return;			
				}					
			
				shop_str += "<tr>";
				shop_str += "<td class=\"shop\">" + state.active.variables.shops[params[0]].items[i].ID + "</td>";
				shop_str += "<td class=\"shop\">" + existing_items_with_id[0].name + "</td>";
				shop_str += "<td class=\"shop\">" + state.active.variables.shops[params[0]].items[i].quantity + "</td>";
				if (inventorySkill1Label.length > 0) shop_str +="<td class=\"shop\">" + existing_items_with_id[0].skill1 + "</td>";
				if (inventorySkill2Label.length > 0) shop_str +="<td class=\"shop\">" + existing_items_with_id[0].skill2 + "</td>";
				if (inventorySkill3Label.length > 0) shop_str +="<td class=\"shop\">" + existing_items_with_id[0].skill3 + "</td>";	

				// buy
				if ((state.active.variables.money >= existing_items_with_id[0].buyPrice) && (state.active.variables.shops[params[0]].items[i].quantity > 0)) {
				shop_str += "<td class=\"shop\"><a onClick=\"buy('"+escape(JSON.stringify(existing_items_with_id[0]))+
					"','"+state.active.variables.shops[params[0]].items[i].type+"'," +params[0]+ "," +i+");\" href=\"javascript:void(0);\">buy for " + existing_items_with_id[0].buyPrice + "" + currency +"</a></td>";
				} else {
					shop_str += "<td class=\"shop\">buy for " + existing_items_with_id[0].buyPrice + "" + currency +"</td>";
				}
					
				// sell				
				var min_owned = (is_cloth_worn) ? 1 : 0;
				if ((object_owned.length > 0) && (object_owned[0].owned > min_owned)) {
					shop_str += "<td class=\"shop\"><a onClick=\"sell('"+escape(JSON.stringify(existing_items_with_id[0]))+
						"','"+state.active.variables.shops[params[0]].items[i].type+"'," +params[0]+ "," +i+");\" href=\"javascript:void(0);\">sell for " + existing_items_with_id[0].sellPrice + "" + currency + "</a></td>";
				} else {
					
					// Is player wearing that cloth?
					if ((object_owned.length > 0) && (object_owned[0].owned == 1) && (is_cloth_worn)) {
						shop_str += "<td class=\"shop\">sell for " + existing_items_with_id[0].sellPrice + "" + currency + "<br>(You are wearing that)</td>";
					} else {
						shop_str += "<td class=\"shop\">sell for " + existing_items_with_id[0].sellPrice + "" + currency + "</td>";
					}
				}
					
				// image
				shop_str += "<td class=\"shop\"><img src=\"" + existing_items_with_id[0].image + "\"></td></tr>";
			}
			shop_str +="</table>";
			new Wikifier(place, shop_str);
		}
	}
};